// lecture_001.cpp : 이 파일에는 'main' 함수가 포함됩니다. 거기서 프로그램 실행이 시작되고 종료됩니다.
//
#define _CRT_SECURE_NO_WARNINGS
#include <stdio.h>

int main(void)
{
	int N[9][9] = { { }, { }, { } };
	int M[9] = { 0 };		//각 행에 대한 최대값 배열
	int max;
	int max_max = -1;		//M[]에서의 최대값
	int cnt_x = 0;			//최대값의 행
	int y[9] = { 0 };		//최대값의 열에 대한 배열
	int cnt_y = 0;			//최대값의 열
	int i, j;



	for (i = 0;i < 9;i++) {
		for (j = 0;j < 9;j++) {
			scanf("%d", &N[i][j]);
		}
	}

	for (i = 0;i < 9;i++) {
		max = -1;

		for (j = 0;j < 9;j++) {
			if (N[i][j] > max) {
				max = N[i][j];
				cnt_y=j+1;
			}
		}
		M[i] = max;
		y[i] = cnt_y;
	}

	for (i = 0;i < 9;i++) {
		if (max_max < M[i]) {
			max_max = M[i];
			cnt_x = i + 1;
		}

	}

	printf("%d\n", max_max);		//최대값
	printf("%d\n", cnt_x);			//행
	printf("%d", y[cnt_x - 1]);		//열

	return 0;
}

// 프로그램 실행: <Ctrl+F5> 또는 [디버그] > [디버깅하지 않고 시작] 메뉴
// 프로그램 디버그: <F5> 키 또는 [디버그] > [디버깅 시작] 메뉴

// 시작을 위한 팁: 
//   1. [솔루션 탐색기] 창을 사용하여 파일을 추가/관리합니다.
//   2. [팀 탐색기] 창을 사용하여 소스 제어에 연결합니다.
//   3. [출력] 창을 사용하여 빌드 출력 및 기타 메시지를 확인합니다.
//   4. [오류 목록] 창을 사용하여 오류를 봅니다.
//   5. [프로젝트] > [새 항목 추가]로 이동하여 새 코드 파일을 만들거나, [프로젝트] > [기존 항목 추가]로 이동하여 기존 코드 파일을 프로젝트에 추가합니다.
//   6. 나중에 이 프로젝트를 다시 열려면 [파일] > [열기] > [프로젝트]로 이동하고 .sln 파일을 선택합니다.
